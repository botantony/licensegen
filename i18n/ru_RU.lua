local colors = require("i18n._color")
return {
	-- config errors
	["config-unsupported-key"] = colors.red
		.. "Ошибка"
		.. colors.reset
		.. ": ключ `$key$` использует неподдерживаемый тип данных $type$ (используйте число или строку)!\n",
	["config-unsupported-value"] = colors.red
		.. "Ошибка"
		.. colors.reset
		.. ": значение `$value$` использует неподдерживаемый тип данных $type$ (используйте число или строку)!\n",
	-- invalid aliases
	["error-invalid-alias-key"] = colors.red
		.. "Ошибка"
		.. colors.reset
		.. ": некорректный ключ псевдонима `$key$` со значением `$value$!\nКлюч и значение должны быть строками!\n",
	["error-invalid-alias-value"] = colors.red
		.. "Ошибка"
		.. colors.reset
		.. ": некорректное значение псевдонима `$value$` с ключом `$key$`!\nКлюч и значение должны быть строками!\n",
	-- overlapping licenses
	["warning-overlapping-licenses"] = colors.yellow
		.. "Предупреждение"
		.. colors.reset
		.. ": так как названия лицензий не чувствительны к регистру, эти $type$ лицензии конфликтуют друг с другом: $first$ и $second",
	["license-type-custom"] = "пользовательские",
	["license-type-standard"] = "стандартные",
	-- license list
	["license-list-custom-licenses"] = "Пользовательские лиценизз:",
	["license-list-overwrites"] = "$license$ (переопределяет стандартную лицензию)",
	["license-list-overwritten"] = "$license$ (переопределена пользовательской лицензией)",
	["license-list-standard-licenses"] = "Стандартные лицензии:",
	-- help
	["cli-help"] = [==[Небольшая утилита для генерации файлов лицензий по шаблону
ИСПОЛЬЗОВАНИЕ:

	licensegen [ОПЦИИ] [ЛИЦЕНЗИЯ] [АРГУМЕНТЫ]

ОПЦИИ:

	-h,     --help        Показывает эту страницу с документацией
	-a,     --aliases     Показывает псевдонимы лицензий
	--list, --licenses    Показывает все лицензии
	--cfg,  --config      Показывает путь до файла конфигурации

АРГУМЕНТЫ:

Аргументы замены текста должны быть заданы в следующем формате: `--<аргумент>=<текст>`, например `--owner=пользователь` или `--owner="Ваше полное имя"`. Все аргументы (с некоторыми исключениями) можно задать в файле конфигурации или переназначить при помощи аргумента в консоли.

Некоторые аргументы могут задаваться самостоятельно:
	aliases       Задаёт псевдонимы для лицензий (Lua-таблица, используйте `--aliases` чтобы увидеть весь список)
	filename      Название создаваемого файла (по-умолчанию `LICENSE`)
	licensename   Название лицензии, которую вы хотите использовать (переменную можно задать только в файле конфигурации)
	owner         Владелец проекта (по-умолчанию имя пользователя этого компьютера)
	project       Название проекта (по-умолчанию название текущей директории)
	workdir       Полный путь до проекта, в котором будет создаваться файл
	year          Текущий год

Список аргументов, которые нельзя поменять:]==],
	["cli-help-cfg-only"] = "Эти аргументы можно задать только в файле конфигурации:",
	["cli-aliases"] = "Список всех псевдонимов разных лицензий. Вы можете задать свои собственные псевдонимы или перезаписать существующие в конфигурационном файле:",
	-- config path
	["cli-config-directory"] = [==[Полный путь до директории с конфигурацией: $dir$$slash$
Конфигурационный файл: $dir$$slash$config.lua
Директория с пользовательскими лицензиями: $dir$$slash$licenses$slash$]==],
	["error-unknown-license"] = colors.red
		.. "Ошибка"
		.. colors.reset
		.. ": неизвестная лицензия `$name$`. Возможно вы искали другую лицензию с похожим названием:\n",
	["error-no-license-name"] = colors.red
		.. "Ошибка"
		.. colors.reset
		.. ": не было предоставлено название лицензии!\n",
	["warning-unfilled-argument"] = colors.yellow
		.. "Предупреждение"
		.. colors.reset
		.. ": аргумент `$arg$` не был заменён!\n",
	["error-open-file"] = colors.red
		.. "Во время открытия файла `$path$` произошла ошибка!\n"
		.. colors.reset,
	-- note formatting
	["note-format"] = colors.blue .. "Примечание" .. colors.reset .. ": $note$",
	-- done
	["done"] = colors.green .. "ГОТОВО!" .. colors.reset,
}
